from classification_function import kfold
import os
import pandas as pd
import numpy as np
from imblearn.over_sampling import SMOTE

dt_combine_fs = pd.read_csv('your data')
dt_combine_fs['depression_group'] = 0
dt_combine_fs.loc[dt_combine_fs['t1_PHQ_total']>=10, 'depression_group'] = 1

#FOR SELECTED VARIABLES
var_feature = ['t1_PSES2','t1_SOLI_total','t1_EASQ_locus','t1_EASQ_stability', 't1_EASQ_globality', 
               't1_BIS', 't1_BAS_drive','t1_BAS_reward_responsiveness', 't1_BAS_fun_seeking',
               't1_RRS_brooding','t1_UCLALS_total', 't1_SSS_total', 
               't1_CTQ_total', 't1_CDRISC_total', 't1_PSS_total']

Symptoms = ['t1_PSQI_total','t1_DARS_total','t1_RSES_total',
               't1_BHS_total',
               't1_MDMQ_vigilance', 't1_MDMQ_procrastination','t1_MDMQ_hypervigilance', 't1_MDMQ_buckpassing',
              't1_SBQ_total','t1_SCL_total']

demographic_var = ['t1_gender', 't1_age','t1_ethnicity', 't1_education_level','t1_marital_status', 
                   't1_occupational_study_status']
                   
selected_features = ['t1_UCLALS_total', 't1_PSS_total', 't1_RRS_brooding', 't1_CDRISC_total']

#give the X & Y
X = dt_combine_fs[var_feature]
#X = dt_combine_fs[selected_features]
Y = dt_combine_fs['depression_group']
#use SMOTE to oversample the minority group
sm = SMOTE(random_state=0)
X_res, Y_res = sm.fit_resample(X, Y)
#use kfold to get the balanced accuracy and roc_auc
roc_ls, accuracy_ls, sensitivity_ls, specificity_ls = kfold(X_res,Y_res)
#print the average accuracy, roc_auc, sensitivity and specificity
print('All factors ROC AUC:', np.mean(roc_ls)) 
print('All factors Accuracy:', np.mean(accuracy_ls)) 
print('All factors sensitivity',np.mean(sensitivity_ls))
print('All factors specificity',np.mean(specificity_ls))
